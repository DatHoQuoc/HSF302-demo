spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/bool_social_network
    username: username
    password: password
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  mail:
    host: localhost
    port: 1025
    username: dat
    password: dat
    properties:
      mail:
        smtp:
          trust: "*"
        auth: true
        starttls:
          enable: true
        connectiontimeout: 5000
        timeout: 3000
        writetimeout: 5000
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${OAUTH2_CLIENT_ID}
            client-secret: ${OAUTH2_CLIENT_SECRET}
            scope:
              - profile
              - email
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
application:
  security:
    jwt:
      secret-key: 5B68B5FAA5D2CE354127BF89CCF39E8D4C3A76F2D94718E6B21AF8C8D512FEED
      expiration: 8640000
  mailing:
    frontend:
      activation-url: http://localhost:4200/activate-account
  file:
    upload:
      photos-output-path: ./uploads
  frontends:
    url: ${FRONT_END_URL}
server:
  port: 8088
supabase:
  url: https://cabihztuvxlsaapmsxis.supabase.co
  service-role-key: ${SUPABASE_KEY}
  public-bucket:
    name: book-image
  private-bucket:
    name: book-content
